{"version":3,"sources":["redux/user/userTypes.js","redux/user/userAction.js","components/PageContainer.js","redux/user/userReducer.js","redux/rootReducer.js","redux/store.js","components/UserContainer.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","fetchUsers","dispatch","fetchUsersRequest","axios","get","then","response","users","data","fetchUsersSuccess","catch","error","fetchUsersFailure","message","type","payload","connect","state","userData","user","props","Description","initialState","loading","reducer","action","rootReducer","combineReducers","userReducer","store","createStore","applyMiddleware","logger","thunk","useEffect","console","log","className","role","returndata","key","push","Name","href","id","fetchdata","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e746ca88.chunk.js","sourcesContent":["\r\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST'\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS'\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE'","import axios from 'axios'\r\nimport {\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILURE\r\n} from './userTypes'\r\n\r\nexport const fetchUsers = () => {\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersRequest())\r\n        axios\r\n            .get('https://api.covid19api.com/')\r\n            .then(response => {\r\n                // response.data is the users\r\n                const users = response.data\r\n                dispatch(fetchUsersSuccess(users))\r\n            })\r\n            .catch(error => {\r\n                // error.message is the error message\r\n                dispatch(fetchUsersFailure(error.message))\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchUsersRequest = () => {\r\n    return {\r\n        type: FETCH_USERS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchUsersSuccess = users => {\r\n    return {\r\n        type: FETCH_USERS_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const fetchUsersFailure = error => {\r\n    return {\r\n        type: FETCH_USERS_FAILURE,\r\n        payload: error\r\n    }\r\n}","\r\nimport { connect } from 'react-redux'\r\nimport { fetchUsers } from '../redux/user/userAction'\r\n\r\n\r\n\r\n\r\nimport React from 'react'\r\n\r\nfunction PageContainer(props) {\r\n\r\n    return (\r\n        <div>\r\n            <h1>{props.userData.Description}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.user\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PageContainer)\r\n","import {\r\n    FETCH_USERS_REQUEST,\r\n    FETCH_USERS_SUCCESS,\r\n    FETCH_USERS_FAILURE\r\n} from './userTypes'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    users: [],\r\n    error: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case FETCH_USERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                users: action.payload,\r\n                error: ''\r\n            }\r\n        case FETCH_USERS_FAILURE:\r\n            return {\r\n                loading: false,\r\n                users: [],\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer","\r\nimport { combineReducers } from 'redux'\r\n\r\nimport userReducer from './user/userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    user: userReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(\r\n    rootReducer, applyMiddleware(logger, thunk))\r\n\r\n\r\nexport default store","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchUsers } from '../redux/user/userAction'\r\nimport \"../App.css\"\r\n\r\n\r\n\r\nfunction UsersContainer({ userData, fetchUsers }) {\r\n    useEffect(() => {\r\n        fetchUsers()\r\n    }, [fetchUsers])\r\n\r\n    const fetchdata = (userData) => {\r\n\r\n        const returndata = []\r\n        for (const key in userData) {\r\n            returndata.push(\r\n                <div className=\"col-md-3 mb-3\" key={userData[key].id}>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header header\">\r\n                            <h5 className=\"text-danger\">\r\n                                {userData[key].Name}\r\n                            </h5>\r\n\r\n                        </div>\r\n                        <div className=\"classdiv\">\r\n                            <p className=\"p-2 \">{userData[key].Description}</p>\r\n                        </div>\r\n                        <a href='#' className=\"btn btn-secondary\">Read More</a>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        return returndata\r\n\r\n    }\r\n\r\n    console.log('userstafetch', userData)\r\n    return userData.loading ? (\r\n        <div className=\"spinner-border text-primary align-self-center \" role=\"status\">\r\n            <span className=\"sr-only ml-10 \">Loading...</span>\r\n        </div>\r\n    ) : userData.error ? (\r\n        <h2>{userData.error}</h2>\r\n    ) : (\r\n                <div className=\"userss\">\r\n                    <h2 className=\"users\">Users List</h2>\r\n                    <div className=\"container py-4\">\r\n                        <div className=\"row\">\r\n                            {\r\n                                userData &&\r\n                                userData.users\r\n                                &&\r\n\r\n                                fetchdata(userData.users)\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n\r\n                        <p>{userData.Description}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchUsers: () => dispatch(fetchUsers())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UsersContainer)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport PageContainer from './components/PageContainer'\nimport store from './redux/store'\n\nimport UsersContainer from './components/UserContainer'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <UsersContainer />\n        <PageContainer />\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}